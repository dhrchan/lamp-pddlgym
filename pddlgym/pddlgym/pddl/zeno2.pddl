(define (domain zenotravel)
  (:requirements :typing :probabilistic-effects)
  (:types aircraft person city flevel)
  (:predicates 
         (at-person ?p - person ?c - city)
         (at-aircraft ?a - aircraft ?c - city)
	       (boarding ?p - person ?a - aircraft)
	       (not-boarding ?p - person)
	       (in ?p - person ?a - aircraft)
	       (debarking ?p - person ?a - aircraft)
	       (not-debarking ?p - person)
	       (fuel-level ?a - aircraft ?l - flevel)
	       (next ?l1 - flevel ?l2 - flevel)
	       (flying ?a - aircraft ?c - city)
	       (zooming ?a - aircraft ?c - city)
	       (refueling ?a - aircraft)
	       (not-refueling ?a - aircraft)
         (person0 ?p - person)
         (person1 ?p - person)
           (startboarding ?p - person ?a - aircraft)
           (completeboarding ?p - person)
           (startdebarking ?p - person)
           (completedebarking ?p - person)
           (startflying ?a - aircraft ?c - city)
           (completeflying ?a - aircraft)
           (startzooming ?a - aircraft ?c - city)
           (completezooming ?a - aircraft)
           (startrefueling ?a - aircraft)
           (completerefueling ?a - aircraft)
  )
  ; (:actions startboarding completeboarding startdebarking completedebarking startflying completeflying startzooming completezooming startrefueling completerefueling)
  (:action start-boarding
    :parameters (?p - person ?a - aircraft ?c - city)
    :precondition (and (startboarding ?p ?a) (at-person ?p ?c) (at-aircraft ?a ?c))
    :effect (and (not (at-person ?p ?c)) (not (not-boarding ?p)) (boarding ?p ?a))
  )
  (:action complete-boarding
    :parameters (?p - person ?a - aircraft ?c - city)
    :precondition (and (completeboarding ?p) (boarding ?p ?a) (at-aircraft ?a ?c))
    :effect (and (probabilistic 1.0 (and (not (boarding ?p ?a)) (in ?p ?a) (not-boarding ?p))))
  )
  (:action start-debarking
    :parameters (?p - person ?a - aircraft ?c - city)
    :precondition (and (startdebarking ?p) (in ?p ?a) (at-aircraft ?a ?c))
    :effect (and (not (in ?p ?a)) (not (not-debarking ?p)) (debarking ?p ?a))
  )
  (:action complete-debarking
    :parameters (?p - person ?a - aircraft ?c - city)
    :precondition (and (completedebarking ?p) (debarking ?p ?a) (at-aircraft ?a ?c))
    :effect (and (probabilistic 1.0 (and (not (debarking ?p ?a)) (at-person ?p ?c) (not-debarking ?p))))
  )
  (:action start-flying
    :parameters (?a - aircraft ?c1 - city ?c2 - city ?l1 - flevel ?l2 - flevel ?p0 - person ?p1 - person)
    :precondition (and (startflying ?a ?c2) (at-aircraft ?a ?c1) (fuel-level ?a ?l1) (next ?l2 ?l1) (not-refueling ?a)
                       (person0 ?p0) (person1 ?p1) (not (boarding ?p0 ?a)) (not (debarking ?p0 ?a)) (not (boarding ?p1 ?a)) (not (debarking ?p1 ?a)) )
    :effect (and (not (at-aircraft ?a ?c1)) (flying ?a ?c2))
  )
  (:action complete-flying
    :parameters (?a - aircraft ?c2 - city ?l1 - flevel ?l2 - flevel)
    :precondition (and (completeflying ?a) (flying ?a ?c2) (fuel-level ?a ?l1) (next ?l2 ?l1))
    :effect (and (probabilistic 1/5 (and (not (flying ?a ?c2)) (at-aircraft ?a ?c2) (not (fuel-level ?a ?l1)) (fuel-level ?a ?l2))))
  )
  (:action start-zooming
    :parameters (?a - aircraft ?c1 - city ?c2 - city ?l1 - flevel ?l2 - flevel ?l3 - flevel ?p0 - person ?p1 - person)
    :precondition (and (startzooming ?a ?c2) (at-aircraft ?a ?c1) (fuel-level ?a ?l1) (next ?l2 ?l1) (next ?l3 ?l2) (not-refueling ?a)
                       (person0 ?p0) (person1 ?p1) (not (boarding ?p0 ?a)) (not (debarking ?p0 ?a)) (not (boarding ?p1 ?a)) (not (debarking ?p1 ?a)) )
    :effect (and (not (at-aircraft ?a ?c1)) (zooming ?a ?c2))
  )
  (:action complete-zooming
   :parameters (?a - aircraft ?c2 - city ?l1 - flevel ?l2 - flevel ?l3 - flevel)
   :precondition (and (completezooming ?a) (zooming ?a ?c2) (fuel-level ?a ?l1) (next ?l2 ?l1) (next ?l3 ?l2))
   :effect (and (probabilistic 1/3 (and (not (zooming ?a ?c2)) (at-aircraft ?a ?c2) (not (fuel-level ?a ?l1)) (fuel-level ?a ?l3))))
  )
  (:action start-refueling
    :parameters (?a - aircraft ?c - city ?l - flevel ?l1 - flevel)
    :precondition (and (startrefueling ?a) (at-aircraft ?a ?c) (not-refueling ?a) (fuel-level ?a ?l) (next ?l ?l1))
    :effect (and (refueling ?a) (not (not-refueling ?a)))
  )
  (:action complete-refuling
    :parameters (?a - aircraft ?l - flevel ?l1 - flevel)
    :precondition (and (completerefueling ?a) (refueling ?a) (fuel-level ?a ?l) (next ?l ?l1))
    :effect (and (probabilistic 5/7 (and (not (refueling ?a)) (not-refueling ?a) (fuel-level ?a ?l1) (not (fuel-level ?a ?l)))))
  )
)
